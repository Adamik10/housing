// the variables used in this file can be found in
// style.scss

.property {
  width: 100%;
  padding: 0.5rem;
  margin-bottom: 2rem;
  border-radius: 3px;
  display: flex;
  flex-direction: column;
  background-color: $background;
  overflow: hidden;
  filter: drop-shadow(1px 0px 3px $shadow);

  &__image {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  &__title {
    margin-bottom: 0;
    text-align: center;
  }

  &__address {
    text-align: center;
  }
}

// responsive components could also be solved using
// css variables, like explained in this post f.e.
// https://css-tricks.com/responsive-designs-and-css-custom-properties-defining-variables-and-breakpoints/
// However, I have never worked with it in this way, so I just used
// the practices that I know (media queries below)
@media only screen and (min-width: 426px) and (max-width: 600px) {
  .property {
    width: 47%;
    margin: 0 1rem 1rem 0;

    &:nth-of-type(2n + 0) {
      margin-right: 0;
    }
  }
}

@media only screen and (min-width: 601px) and (max-width: 1023px) {
  .property {
    width: 31%;
    margin: 0 1rem 1rem 0;

    &:nth-of-type(3n + 0) {
      margin-right: 0;
    }
  }
}

@media only screen and (min-width: 1024px) and (max-width: 1500px) {
  .property {
    width: 18.5%;
    margin: 0 1rem 1rem 0;

    &:nth-of-type(5n + 0) {
      margin-right: 0;
    }
  }
}

@media only screen and (min-width: 1501px) {
  .property {
    width: 19.2%;
    margin: 0 1rem 1rem 0;

    &:nth-of-type(5n + 0) {
      margin-right: 0;
    }
  }
}

.super {
  vertical-align: super;
  font-size: 0.6rem;
}
